// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="oled_process,hls_ip_2017_3,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.263000,HLS_SYN_LAT=386,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=2,HLS_SYN_FF=366,HLS_SYN_LUT=471}" *)

module oled_process (
        clk,
        reset,
        en,
        s,
        e_dout,
        e_empty_n,
        e_read,
        s_f_din,
        s_f_full_n,
        s_f_write
);


input   clk;
input   reset;
output   en;
output  [5:0] s;
input  [31:0] e_dout;
input   e_empty_n;
output   e_read;
output  [31:0] s_f_din;
input   s_f_full_n;
output   s_f_write;

reg en;
reg[5:0] s;

wire   [31:0] grp_oled_process_do_oled_process_fu_70_oled_process_sum;
wire    grp_oled_process_do_oled_process_fu_70_oled_process_sum_ap_vld;
wire   [31:0] grp_oled_process_do_oled_process_fu_70_oled_process_save;
wire    grp_oled_process_do_oled_process_fu_70_oled_process_save_ap_vld;
wire    grp_oled_process_do_oled_process_fu_70_en;
wire    grp_oled_process_do_oled_process_fu_70_en_ap_vld;
wire   [5:0] grp_oled_process_do_oled_process_fu_70_s;
wire    grp_oled_process_do_oled_process_fu_70_s_ap_vld;
wire    grp_oled_process_do_oled_process_fu_70_e_read;
wire   [31:0] grp_oled_process_do_oled_process_fu_70_s_f_din;
wire    grp_oled_process_do_oled_process_fu_70_s_f_write;

oled_process_do_oled_process grp_oled_process_do_oled_process_fu_70(
    .ap_clk(clk),
    .ap_rst(reset),
    .oled_process_sum(grp_oled_process_do_oled_process_fu_70_oled_process_sum),
    .oled_process_sum_ap_vld(grp_oled_process_do_oled_process_fu_70_oled_process_sum_ap_vld),
    .oled_process_save(grp_oled_process_do_oled_process_fu_70_oled_process_save),
    .oled_process_save_ap_vld(grp_oled_process_do_oled_process_fu_70_oled_process_save_ap_vld),
    .en(grp_oled_process_do_oled_process_fu_70_en),
    .en_ap_vld(grp_oled_process_do_oled_process_fu_70_en_ap_vld),
    .s(grp_oled_process_do_oled_process_fu_70_s),
    .s_ap_vld(grp_oled_process_do_oled_process_fu_70_s_ap_vld),
    .e_dout(e_dout),
    .e_empty_n(e_empty_n),
    .e_read(grp_oled_process_do_oled_process_fu_70_e_read),
    .s_f_din(grp_oled_process_do_oled_process_fu_70_s_f_din),
    .s_f_full_n(s_f_full_n),
    .s_f_write(grp_oled_process_do_oled_process_fu_70_s_f_write)
);

always @ (posedge clk) begin
    if ((1'b1 == grp_oled_process_do_oled_process_fu_70_en_ap_vld)) begin
        en <= grp_oled_process_do_oled_process_fu_70_en;
    end
end

always @ (posedge clk) begin
    if ((1'b1 == grp_oled_process_do_oled_process_fu_70_s_ap_vld)) begin
        s <= grp_oled_process_do_oled_process_fu_70_s;
    end
end

assign e_read = grp_oled_process_do_oled_process_fu_70_e_read;

assign s_f_din = grp_oled_process_do_oled_process_fu_70_s_f_din;

assign s_f_write = grp_oled_process_do_oled_process_fu_70_s_f_write;

endmodule //oled_process
