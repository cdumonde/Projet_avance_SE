// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "oled_process_do_oled_process.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic oled_process_do_oled_process::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic oled_process_do_oled_process::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state2 = "10";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state3 = "100";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state4 = "1000";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state5 = "10000";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state6 = "100000";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state7 = "1000000";
const sc_lv<8> oled_process_do_oled_process::ap_ST_fsm_state8 = "10000000";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_2 = "10";
const sc_lv<1> oled_process_do_oled_process::ap_const_lv1_0 = "0";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_7 = "111";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_1 = "1";
const sc_lv<8> oled_process_do_oled_process::ap_const_lv8_0 = "00000000";
const sc_lv<1> oled_process_do_oled_process::ap_const_lv1_1 = "1";
const sc_lv<6> oled_process_do_oled_process::ap_const_lv6_35 = "110101";
const sc_lv<6> oled_process_do_oled_process::ap_const_lv6_9 = "1001";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_3 = "11";
const sc_lv<8> oled_process_do_oled_process::ap_const_lv8_80 = "10000000";
const sc_lv<8> oled_process_do_oled_process::ap_const_lv8_1 = "1";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_17 = "10111";
const sc_lv<32> oled_process_do_oled_process::ap_const_lv32_1E = "11110";
const sc_lv<8> oled_process_do_oled_process::ap_const_lv8_FF = "11111111";
const sc_lv<23> oled_process_do_oled_process::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<5> oled_process_do_oled_process::ap_const_lv5_1 = "1";
const bool oled_process_do_oled_process::ap_const_boolean_1 = true;

oled_process_do_oled_process::oled_process_do_oled_process(sc_module_name name) : sc_module(name), mVcdFile(0) {
    oled_process_faddbkb_U1 = new oled_process_faddbkb<1,5,32,32,32>("oled_process_faddbkb_U1");
    oled_process_faddbkb_U1->clk(ap_clk);
    oled_process_faddbkb_U1->reset(ap_rst);
    oled_process_faddbkb_U1->din0(storemerge_reg_152);
    oled_process_faddbkb_U1->din1(val_reg_249);
    oled_process_faddbkb_U1->ce(ap_var_for_const0);
    oled_process_faddbkb_U1->dout(grp_fu_176_p2);
    oled_process_fcmpcud_U2 = new oled_process_fcmpcud<1,1,32,32,1>("oled_process_fcmpcud_U2");
    oled_process_fcmpcud_U2->din0(storemerge_reg_152);
    oled_process_fcmpcud_U2->din1(ap_var_for_const1);
    oled_process_fcmpcud_U2->opcode(ap_var_for_const2);
    oled_process_fcmpcud_U2->dout(tmp_3_fu_181_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_ap_condition_135);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_e_blk_n);
    sensitive << ( e_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_e_read);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_en);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_fu_235_p2 );

    SC_METHOD(thread_en_ap_vld);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_4_fu_235_p2 );

    SC_METHOD(thread_exitcond_fu_187_p2);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_i_1_fu_193_p2);
    sensitive << ( i_reg_165 );

    SC_METHOD(thread_notlhs_fu_217_p2);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( tmp_s_fu_203_p4 );

    SC_METHOD(thread_notrhs_fu_223_p2);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( tmp_12_fu_213_p1 );

    SC_METHOD(thread_oled_process_save);
    sensitive << ( val_reg_249 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_oled_process_save_ap_vld);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_oled_process_sum);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( storemerge_reg_152 );

    SC_METHOD(thread_oled_process_sum_ap_vld);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_oled_process_sum_loa_1_fu_199_p1);
    sensitive << ( storemerge_reg_152 );

    SC_METHOD(thread_s);
    sensitive << ( tmp_4_fu_235_p2 );
    sensitive << ( ap_condition_135 );

    SC_METHOD(thread_s_ap_vld);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );
    sensitive << ( tmp_4_fu_235_p2 );

    SC_METHOD(thread_s_f_blk_n);
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_s_f_din);
    sensitive << ( e_dout );
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_s_f_write);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_METHOD(thread_tmp_12_fu_213_p1);
    sensitive << ( oled_process_sum_loa_1_fu_199_p1 );

    SC_METHOD(thread_tmp_2_fu_229_p2);
    sensitive << ( notrhs_fu_223_p2 );
    sensitive << ( notlhs_fu_217_p2 );

    SC_METHOD(thread_tmp_4_fu_235_p2);
    sensitive << ( tmp_2_fu_229_p2 );
    sensitive << ( tmp_3_fu_181_p2 );

    SC_METHOD(thread_tmp_s_fu_203_p4);
    sensitive << ( oled_process_sum_loa_1_fu_199_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( e_empty_n );
    sensitive << ( s_f_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond_fu_187_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "00000010";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "oled_process_do_oled_process_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, oled_process_sum, "(port)oled_process_sum");
    sc_trace(mVcdFile, oled_process_sum_ap_vld, "(port)oled_process_sum_ap_vld");
    sc_trace(mVcdFile, oled_process_save, "(port)oled_process_save");
    sc_trace(mVcdFile, oled_process_save_ap_vld, "(port)oled_process_save_ap_vld");
    sc_trace(mVcdFile, en, "(port)en");
    sc_trace(mVcdFile, en_ap_vld, "(port)en_ap_vld");
    sc_trace(mVcdFile, s, "(port)s");
    sc_trace(mVcdFile, s_ap_vld, "(port)s_ap_vld");
    sc_trace(mVcdFile, e_dout, "(port)e_dout");
    sc_trace(mVcdFile, e_empty_n, "(port)e_empty_n");
    sc_trace(mVcdFile, e_read, "(port)e_read");
    sc_trace(mVcdFile, s_f_din, "(port)s_f_din");
    sc_trace(mVcdFile, s_f_full_n, "(port)s_f_full_n");
    sc_trace(mVcdFile, s_f_write, "(port)s_f_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, e_blk_n, "e_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond_fu_187_p2, "exitcond_fu_187_p2");
    sc_trace(mVcdFile, s_f_blk_n, "s_f_blk_n");
    sc_trace(mVcdFile, i_1_fu_193_p2, "i_1_fu_193_p2");
    sc_trace(mVcdFile, i_1_reg_244, "i_1_reg_244");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, val_reg_249, "val_reg_249");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, storemerge_reg_152, "storemerge_reg_152");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_reg_165, "i_reg_165");
    sc_trace(mVcdFile, tmp_4_fu_235_p2, "tmp_4_fu_235_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, oled_process_sum_loa_1_fu_199_p1, "oled_process_sum_loa_1_fu_199_p1");
    sc_trace(mVcdFile, tmp_s_fu_203_p4, "tmp_s_fu_203_p4");
    sc_trace(mVcdFile, tmp_12_fu_213_p1, "tmp_12_fu_213_p1");
    sc_trace(mVcdFile, notrhs_fu_223_p2, "notrhs_fu_223_p2");
    sc_trace(mVcdFile, notlhs_fu_217_p2, "notlhs_fu_217_p2");
    sc_trace(mVcdFile, tmp_2_fu_229_p2, "tmp_2_fu_229_p2");
    sc_trace(mVcdFile, tmp_3_fu_181_p2, "tmp_3_fu_181_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_135, "ap_condition_135");
#endif

    }
}

oled_process_do_oled_process::~oled_process_do_oled_process() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete oled_process_faddbkb_U1;
    delete oled_process_fcmpcud_U2;
}

void oled_process_do_oled_process::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void oled_process_do_oled_process::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_0;
}

void oled_process_do_oled_process::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_1;
}

void oled_process_do_oled_process::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state2;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_reg_165 = i_1_reg_244.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_165 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        storemerge_reg_152 = grp_fu_176_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        storemerge_reg_152 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
        i_1_reg_244 = i_1_fu_193_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
        val_reg_249 = e_dout.read();
    }
}

void oled_process_do_oled_process::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void oled_process_do_oled_process::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void oled_process_do_oled_process::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void oled_process_do_oled_process::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void oled_process_do_oled_process::thread_ap_block_state3() {
    ap_block_state3 = ((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read())));
}

void oled_process_do_oled_process::thread_ap_condition_135() {
    ap_condition_135 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1));
}

void oled_process_do_oled_process::thread_e_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0))) {
        e_blk_n = e_empty_n.read();
    } else {
        e_blk_n = ap_const_logic_1;
    }
}

void oled_process_do_oled_process::thread_e_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
        e_read = ap_const_logic_1;
    } else {
        e_read = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_en() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_235_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_235_p2.read())))) {
        en =  (sc_logic) (ap_const_lv1_1[0]);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        en =  (sc_logic) (ap_const_lv1_0[0]);
    } else {
        en = sc_logic('X');
    }
}

void oled_process_do_oled_process::thread_en_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_235_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_235_p2.read())))) {
        en_ap_vld = ap_const_logic_1;
    } else {
        en_ap_vld = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_exitcond_fu_187_p2() {
    exitcond_fu_187_p2 = (!i_reg_165.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_165.read() == ap_const_lv8_80);
}

void oled_process_do_oled_process::thread_i_1_fu_193_p2() {
    i_1_fu_193_p2 = (!i_reg_165.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i_reg_165.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void oled_process_do_oled_process::thread_notlhs_fu_217_p2() {
    notlhs_fu_217_p2 = (!tmp_s_fu_203_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_s_fu_203_p4.read() != ap_const_lv8_FF);
}

void oled_process_do_oled_process::thread_notrhs_fu_223_p2() {
    notrhs_fu_223_p2 = (!tmp_12_fu_213_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_12_fu_213_p1.read() == ap_const_lv23_0);
}

void oled_process_do_oled_process::thread_oled_process_save() {
    oled_process_save = val_reg_249.read();
}

void oled_process_do_oled_process::thread_oled_process_save_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        oled_process_save_ap_vld = ap_const_logic_1;
    } else {
        oled_process_save_ap_vld = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_oled_process_sum() {
    oled_process_sum = storemerge_reg_152.read();
}

void oled_process_do_oled_process::thread_oled_process_sum_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
        oled_process_sum_ap_vld = ap_const_logic_1;
    } else {
        oled_process_sum_ap_vld = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_oled_process_sum_loa_1_fu_199_p1() {
    oled_process_sum_loa_1_fu_199_p1 = storemerge_reg_152.read();
}

void oled_process_do_oled_process::thread_s() {
    if (esl_seteq<1,1,1>(ap_condition_135.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_235_p2.read())) {
            s = ap_const_lv6_9;
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_235_p2.read())) {
            s = ap_const_lv6_35;
        } else {
            s = "XXXXXX";
        }
    } else {
        s = "XXXXXX";
    }
}

void oled_process_do_oled_process::thread_s_ap_vld() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_235_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
          !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && 
          esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_235_p2.read())))) {
        s_ap_vld = ap_const_logic_1;
    } else {
        s_ap_vld = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_s_f_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0))) {
        s_f_blk_n = s_f_full_n.read();
    } else {
        s_f_blk_n = ap_const_logic_1;
    }
}

void oled_process_do_oled_process::thread_s_f_din() {
    s_f_din = e_dout.read();
}

void oled_process_do_oled_process::thread_s_f_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
         !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
        s_f_write = ap_const_logic_1;
    } else {
        s_f_write = ap_const_logic_0;
    }
}

void oled_process_do_oled_process::thread_tmp_12_fu_213_p1() {
    tmp_12_fu_213_p1 = oled_process_sum_loa_1_fu_199_p1.read().range(23-1, 0);
}

void oled_process_do_oled_process::thread_tmp_2_fu_229_p2() {
    tmp_2_fu_229_p2 = (notrhs_fu_223_p2.read() | notlhs_fu_217_p2.read());
}

void oled_process_do_oled_process::thread_tmp_4_fu_235_p2() {
    tmp_4_fu_235_p2 = (tmp_2_fu_229_p2.read() & tmp_3_fu_181_p2.read());
}

void oled_process_do_oled_process::thread_tmp_s_fu_203_p4() {
    tmp_s_fu_203_p4 = oled_process_sum_loa_1_fu_199_p1.read().range(30, 23);
}

void oled_process_do_oled_process::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))) && esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && !((esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, e_empty_n.read())) || (esl_seteq<1,1,1>(exitcond_fu_187_p2.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, s_f_full_n.read()))))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<8>) ("XXXXXXXX");
            break;
    }
}

}

