// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _carre_HH_
#define _carre_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "carre_do_carre.h"

namespace ap_rtl {

struct carre : public sc_module {
    // Port declarations 8
    sc_in_clk clk;
    sc_in< sc_logic > reset;
    sc_in< sc_lv<32> > e_dout;
    sc_in< sc_logic > e_empty_n;
    sc_out< sc_logic > e_read;
    sc_out< sc_lv<32> > s_din;
    sc_in< sc_logic > s_full_n;
    sc_out< sc_logic > s_write;


    // Module declarations
    carre(sc_module_name name);
    SC_HAS_PROCESS(carre);

    ~carre();

    sc_trace_file* mVcdFile;

    carre_do_carre* grp_carre_do_carre_fu_58;
    sc_signal< sc_lv<32> > grp_carre_do_carre_fu_58_carre_x;
    sc_signal< sc_logic > grp_carre_do_carre_fu_58_carre_x_ap_vld;
    sc_signal< sc_logic > grp_carre_do_carre_fu_58_e_read;
    sc_signal< sc_lv<32> > grp_carre_do_carre_fu_58_s_din;
    sc_signal< sc_logic > grp_carre_do_carre_fu_58_s_write;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_e_read();
    void thread_s_din();
    void thread_s_write();
};

}

using namespace ap_rtl;

#endif
