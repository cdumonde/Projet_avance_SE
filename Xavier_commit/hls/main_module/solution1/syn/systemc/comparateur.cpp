// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "comparateur.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic comparateur::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic comparateur::ap_const_logic_0 = sc_dt::Log_0;
const bool comparateur::ap_const_boolean_1 = true;

comparateur::comparateur(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_comparateur_do_comp_fu_66 = new comparateur_do_comp("grp_comparateur_do_comp_fu_66");
    grp_comparateur_do_comp_fu_66->ap_clk(clk);
    grp_comparateur_do_comp_fu_66->ap_rst(reset);
    grp_comparateur_do_comp_fu_66->comparateur_in1(grp_comparateur_do_comp_fu_66_comparateur_in1);
    grp_comparateur_do_comp_fu_66->comparateur_in1_ap_vld(grp_comparateur_do_comp_fu_66_comparateur_in1_ap_vld);
    grp_comparateur_do_comp_fu_66->comparateur_seuil(grp_comparateur_do_comp_fu_66_comparateur_seuil);
    grp_comparateur_do_comp_fu_66->comparateur_seuil_ap_vld(grp_comparateur_do_comp_fu_66_comparateur_seuil_ap_vld);
    grp_comparateur_do_comp_fu_66->comparateur_result(grp_comparateur_do_comp_fu_66_comparateur_result);
    grp_comparateur_do_comp_fu_66->comparateur_result_ap_vld(grp_comparateur_do_comp_fu_66_comparateur_result_ap_vld);
    grp_comparateur_do_comp_fu_66->e1_dout(e1_dout);
    grp_comparateur_do_comp_fu_66->e1_empty_n(e1_empty_n);
    grp_comparateur_do_comp_fu_66->e1_read(grp_comparateur_do_comp_fu_66_e1_read);
    grp_comparateur_do_comp_fu_66->e2_dout(e2_dout);
    grp_comparateur_do_comp_fu_66->e2_empty_n(e2_empty_n);
    grp_comparateur_do_comp_fu_66->e2_read(grp_comparateur_do_comp_fu_66_e2_read);
    grp_comparateur_do_comp_fu_66->s_din(grp_comparateur_do_comp_fu_66_s_din);
    grp_comparateur_do_comp_fu_66->s_full_n(s_full_n);
    grp_comparateur_do_comp_fu_66->s_write(grp_comparateur_do_comp_fu_66_s_write);

    SC_METHOD(thread_e1_read);
    sensitive << ( grp_comparateur_do_comp_fu_66_e1_read );

    SC_METHOD(thread_e2_read);
    sensitive << ( grp_comparateur_do_comp_fu_66_e2_read );

    SC_METHOD(thread_s_din);
    sensitive << ( grp_comparateur_do_comp_fu_66_s_din );
    sensitive << ( grp_comparateur_do_comp_fu_66_s_write );

    SC_METHOD(thread_s_write);
    sensitive << ( grp_comparateur_do_comp_fu_66_s_write );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "comparateur_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, clk, "(port)clk");
    sc_trace(mVcdFile, reset, "(port)reset");
    sc_trace(mVcdFile, e1_dout, "(port)e1_dout");
    sc_trace(mVcdFile, e1_empty_n, "(port)e1_empty_n");
    sc_trace(mVcdFile, e1_read, "(port)e1_read");
    sc_trace(mVcdFile, e2_dout, "(port)e2_dout");
    sc_trace(mVcdFile, e2_empty_n, "(port)e2_empty_n");
    sc_trace(mVcdFile, e2_read, "(port)e2_read");
    sc_trace(mVcdFile, s_din, "(port)s_din");
    sc_trace(mVcdFile, s_full_n, "(port)s_full_n");
    sc_trace(mVcdFile, s_write, "(port)s_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_in1, "grp_comparateur_do_comp_fu_66_comparateur_in1");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_in1_ap_vld, "grp_comparateur_do_comp_fu_66_comparateur_in1_ap_vld");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_seuil, "grp_comparateur_do_comp_fu_66_comparateur_seuil");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_seuil_ap_vld, "grp_comparateur_do_comp_fu_66_comparateur_seuil_ap_vld");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_result, "grp_comparateur_do_comp_fu_66_comparateur_result");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_comparateur_result_ap_vld, "grp_comparateur_do_comp_fu_66_comparateur_result_ap_vld");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_e1_read, "grp_comparateur_do_comp_fu_66_e1_read");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_e2_read, "grp_comparateur_do_comp_fu_66_e2_read");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_s_din, "grp_comparateur_do_comp_fu_66_s_din");
    sc_trace(mVcdFile, grp_comparateur_do_comp_fu_66_s_write, "grp_comparateur_do_comp_fu_66_s_write");
#endif

    }
}

comparateur::~comparateur() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_comparateur_do_comp_fu_66;
}

void comparateur::thread_e1_read() {
    e1_read = grp_comparateur_do_comp_fu_66_e1_read.read();
}

void comparateur::thread_e2_read() {
    e2_read = grp_comparateur_do_comp_fu_66_e2_read.read();
}

void comparateur::thread_s_din() {
    s_din = grp_comparateur_do_comp_fu_66_s_din.read();
}

void comparateur::thread_s_write() {
    s_write = grp_comparateur_do_comp_fu_66_s_write.read();
}

}

