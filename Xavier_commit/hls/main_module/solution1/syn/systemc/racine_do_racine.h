// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _racine_do_racine_HH_
#define _racine_do_racine_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "carre_fmul_32ns_3bkb.h"
#include "comparateur_sitofcud.h"
#include "racine_fsqrt_32nsncg.h"

namespace ap_rtl {

struct racine_do_racine : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<32> > racine_x;
    sc_out< sc_logic > racine_x_ap_vld;
    sc_in< sc_lv<32> > e_dout;
    sc_in< sc_logic > e_empty_n;
    sc_out< sc_logic > e_read;
    sc_out< sc_lv<32> > s_din;
    sc_in< sc_logic > s_full_n;
    sc_out< sc_logic > s_write;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const2;


    // Module declarations
    racine_do_racine(sc_module_name name);
    SC_HAS_PROCESS(racine_do_racine);

    ~racine_do_racine();

    sc_trace_file* mVcdFile;

    carre_fmul_32ns_3bkb<1,4,32,32,32>* carre_fmul_32ns_3bkb_U63;
    comparateur_sitofcud<1,6,32,32>* comparateur_sitofcud_U64;
    racine_fsqrt_32nsncg<1,12,32,32,32>* racine_fsqrt_32nsncg_U65;
    sc_signal< sc_logic > e_blk_n;
    sc_signal< sc_lv<27> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > s_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_lv<32> > val_reg_300;
    sc_signal< sc_lv<1> > p_Result_s_reg_305;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > p_Val2_2_fu_248_p3;
    sc_signal< sc_lv<31> > p_Val2_2_reg_310;
    sc_signal< sc_lv<31> > abs_fu_288_p3;
    sc_signal< sc_lv<31> > abs_reg_315;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_119_p1;
    sc_signal< sc_lv<32> > tmp_6_reg_325;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > grp_fu_122_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_330;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<32> > grp_fu_114_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_336;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<32> > grp_fu_119_p0;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > p_Val2_s_fu_127_p1;
    sc_signal< sc_lv<23> > loc_V_1_fu_148_p1;
    sc_signal< sc_lv<25> > tmp_1_fu_152_p4;
    sc_signal< sc_lv<8> > loc_V_fu_138_p4;
    sc_signal< sc_lv<9> > tmp_2_cast1_fu_166_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_170_p2;
    sc_signal< sc_lv<8> > tmp_3_fu_184_p2;
    sc_signal< sc_lv<1> > isNeg_fu_176_p3;
    sc_signal< sc_lv<9> > tmp_3_cast_fu_190_p1;
    sc_signal< sc_lv<9> > sh_assign_1_fu_194_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_202_p1;
    sc_signal< sc_lv<25> > sh_assign_1_cast_cas_fu_206_p1;
    sc_signal< sc_lv<79> > tmp_1_cast2_fu_162_p1;
    sc_signal< sc_lv<79> > tmp_4_fu_210_p1;
    sc_signal< sc_lv<25> > r_V_fu_214_p2;
    sc_signal< sc_lv<1> > tmp_15_fu_226_p3;
    sc_signal< sc_lv<79> > r_V_1_fu_220_p2;
    sc_signal< sc_lv<31> > tmp_s_fu_234_p1;
    sc_signal< sc_lv<31> > tmp_2_fu_238_p4;
    sc_signal< sc_lv<32> > result_V_fu_256_p1;
    sc_signal< sc_lv<32> > result_V_1_fu_259_p2;
    sc_signal< sc_lv<32> > result_V_3_fu_265_p3;
    sc_signal< sc_lv<31> > tmp_16_fu_272_p1;
    sc_signal< sc_lv<1> > abscond_fu_282_p2;
    sc_signal< sc_lv<31> > neg_cast_fu_276_p2;
    sc_signal< sc_lv<27> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<27> ap_ST_fsm_state2;
    static const sc_lv<27> ap_ST_fsm_state3;
    static const sc_lv<27> ap_ST_fsm_state4;
    static const sc_lv<27> ap_ST_fsm_state5;
    static const sc_lv<27> ap_ST_fsm_state6;
    static const sc_lv<27> ap_ST_fsm_state7;
    static const sc_lv<27> ap_ST_fsm_state8;
    static const sc_lv<27> ap_ST_fsm_state9;
    static const sc_lv<27> ap_ST_fsm_state10;
    static const sc_lv<27> ap_ST_fsm_state11;
    static const sc_lv<27> ap_ST_fsm_state12;
    static const sc_lv<27> ap_ST_fsm_state13;
    static const sc_lv<27> ap_ST_fsm_state14;
    static const sc_lv<27> ap_ST_fsm_state15;
    static const sc_lv<27> ap_ST_fsm_state16;
    static const sc_lv<27> ap_ST_fsm_state17;
    static const sc_lv<27> ap_ST_fsm_state18;
    static const sc_lv<27> ap_ST_fsm_state19;
    static const sc_lv<27> ap_ST_fsm_state20;
    static const sc_lv<27> ap_ST_fsm_state21;
    static const sc_lv<27> ap_ST_fsm_state22;
    static const sc_lv<27> ap_ST_fsm_state23;
    static const sc_lv<27> ap_ST_fsm_state24;
    static const sc_lv<27> ap_ST_fsm_state25;
    static const sc_lv<27> ap_ST_fsm_state26;
    static const sc_lv<27> ap_ST_fsm_state27;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_1A;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_42AE0000;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_36;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_abs_fu_288_p3();
    void thread_abscond_fu_282_p2();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_e_blk_n();
    void thread_e_read();
    void thread_grp_fu_119_p0();
    void thread_isNeg_fu_176_p3();
    void thread_loc_V_1_fu_148_p1();
    void thread_loc_V_fu_138_p4();
    void thread_neg_cast_fu_276_p2();
    void thread_p_Val2_2_fu_248_p3();
    void thread_p_Val2_s_fu_127_p1();
    void thread_r_V_1_fu_220_p2();
    void thread_r_V_fu_214_p2();
    void thread_racine_x();
    void thread_racine_x_ap_vld();
    void thread_result_V_1_fu_259_p2();
    void thread_result_V_3_fu_265_p3();
    void thread_result_V_fu_256_p1();
    void thread_s_blk_n();
    void thread_s_din();
    void thread_s_write();
    void thread_sh_assign_1_cast_cas_fu_206_p1();
    void thread_sh_assign_1_cast_fu_202_p1();
    void thread_sh_assign_1_fu_194_p3();
    void thread_sh_assign_fu_170_p2();
    void thread_tmp_15_fu_226_p3();
    void thread_tmp_16_fu_272_p1();
    void thread_tmp_1_cast2_fu_162_p1();
    void thread_tmp_1_fu_152_p4();
    void thread_tmp_2_cast1_fu_166_p1();
    void thread_tmp_2_fu_238_p4();
    void thread_tmp_3_cast_fu_190_p1();
    void thread_tmp_3_fu_184_p2();
    void thread_tmp_4_fu_210_p1();
    void thread_tmp_s_fu_234_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
