// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "racine_do_racine.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic racine_do_racine::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic racine_do_racine::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<27> racine_do_racine::ap_ST_fsm_state2 = "10";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state3 = "100";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state4 = "1000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state5 = "10000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state6 = "100000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state7 = "1000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state8 = "10000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state9 = "100000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state10 = "1000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state11 = "10000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state12 = "100000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<27> racine_do_racine::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<32> racine_do_racine::ap_const_lv32_1 = "1";
const sc_lv<32> racine_do_racine::ap_const_lv32_1A = "11010";
const sc_lv<32> racine_do_racine::ap_const_lv32_2 = "10";
const sc_lv<32> racine_do_racine::ap_const_lv32_3 = "11";
const sc_lv<32> racine_do_racine::ap_const_lv32_4 = "100";
const sc_lv<32> racine_do_racine::ap_const_lv32_9 = "1001";
const sc_lv<32> racine_do_racine::ap_const_lv32_15 = "10101";
const sc_lv<32> racine_do_racine::ap_const_lv32_19 = "11001";
const sc_lv<32> racine_do_racine::ap_const_lv32_16 = "10110";
const sc_lv<32> racine_do_racine::ap_const_lv32_42AE0000 = "1000010101011100000000000000000";
const sc_lv<32> racine_do_racine::ap_const_lv32_A = "1010";
const sc_lv<32> racine_do_racine::ap_const_lv32_1F = "11111";
const sc_lv<32> racine_do_racine::ap_const_lv32_17 = "10111";
const sc_lv<32> racine_do_racine::ap_const_lv32_1E = "11110";
const sc_lv<1> racine_do_racine::ap_const_lv1_1 = "1";
const sc_lv<1> racine_do_racine::ap_const_lv1_0 = "0";
const sc_lv<9> racine_do_racine::ap_const_lv9_181 = "110000001";
const sc_lv<32> racine_do_racine::ap_const_lv32_8 = "1000";
const sc_lv<8> racine_do_racine::ap_const_lv8_7F = "1111111";
const sc_lv<32> racine_do_racine::ap_const_lv32_18 = "11000";
const sc_lv<32> racine_do_racine::ap_const_lv32_36 = "110110";
const sc_lv<32> racine_do_racine::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<31> racine_do_racine::ap_const_lv31_0 = "0000000000000000000000000000000";
const bool racine_do_racine::ap_const_boolean_1 = true;

racine_do_racine::racine_do_racine(sc_module_name name) : sc_module(name), mVcdFile(0) {
    carre_fmul_32ns_3bkb_U63 = new carre_fmul_32ns_3bkb<1,4,32,32,32>("carre_fmul_32ns_3bkb_U63");
    carre_fmul_32ns_3bkb_U63->clk(ap_clk);
    carre_fmul_32ns_3bkb_U63->reset(ap_rst);
    carre_fmul_32ns_3bkb_U63->din0(tmp_7_reg_330);
    carre_fmul_32ns_3bkb_U63->din1(ap_var_for_const0);
    carre_fmul_32ns_3bkb_U63->ce(ap_var_for_const1);
    carre_fmul_32ns_3bkb_U63->dout(grp_fu_114_p2);
    comparateur_sitofcud_U64 = new comparateur_sitofcud<1,6,32,32>("comparateur_sitofcud_U64");
    comparateur_sitofcud_U64->clk(ap_clk);
    comparateur_sitofcud_U64->reset(ap_rst);
    comparateur_sitofcud_U64->din0(grp_fu_119_p0);
    comparateur_sitofcud_U64->ce(ap_var_for_const1);
    comparateur_sitofcud_U64->dout(grp_fu_119_p1);
    racine_fsqrt_32nsncg_U65 = new racine_fsqrt_32nsncg<1,12,32,32,32>("racine_fsqrt_32nsncg_U65");
    racine_fsqrt_32nsncg_U65->clk(ap_clk);
    racine_fsqrt_32nsncg_U65->reset(ap_rst);
    racine_fsqrt_32nsncg_U65->din0(ap_var_for_const2);
    racine_fsqrt_32nsncg_U65->din1(tmp_6_reg_325);
    racine_fsqrt_32nsncg_U65->ce(ap_var_for_const1);
    racine_fsqrt_32nsncg_U65->dout(grp_fu_122_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_abs_fu_288_p3);
    sensitive << ( tmp_16_fu_272_p1 );
    sensitive << ( abscond_fu_282_p2 );
    sensitive << ( neg_cast_fu_276_p2 );

    SC_METHOD(thread_abscond_fu_282_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( result_V_3_fu_265_p3 );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_e_blk_n);
    sensitive << ( e_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_e_read);
    sensitive << ( e_empty_n );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_fu_119_p0);
    sensitive << ( abs_reg_315 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_isNeg_fu_176_p3);
    sensitive << ( sh_assign_fu_170_p2 );

    SC_METHOD(thread_loc_V_1_fu_148_p1);
    sensitive << ( p_Val2_s_fu_127_p1 );

    SC_METHOD(thread_loc_V_fu_138_p4);
    sensitive << ( p_Val2_s_fu_127_p1 );

    SC_METHOD(thread_neg_cast_fu_276_p2);
    sensitive << ( tmp_16_fu_272_p1 );

    SC_METHOD(thread_p_Val2_2_fu_248_p3);
    sensitive << ( isNeg_fu_176_p3 );
    sensitive << ( tmp_s_fu_234_p1 );
    sensitive << ( tmp_2_fu_238_p4 );

    SC_METHOD(thread_p_Val2_s_fu_127_p1);
    sensitive << ( val_reg_300 );

    SC_METHOD(thread_r_V_1_fu_220_p2);
    sensitive << ( tmp_1_cast2_fu_162_p1 );
    sensitive << ( tmp_4_fu_210_p1 );

    SC_METHOD(thread_r_V_fu_214_p2);
    sensitive << ( tmp_1_fu_152_p4 );
    sensitive << ( sh_assign_1_cast_cas_fu_206_p1 );

    SC_METHOD(thread_racine_x);
    sensitive << ( tmp_7_reg_330 );
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_racine_x_ap_vld);
    sensitive << ( ap_CS_fsm_state23 );

    SC_METHOD(thread_result_V_1_fu_259_p2);
    sensitive << ( result_V_fu_256_p1 );

    SC_METHOD(thread_result_V_3_fu_265_p3);
    sensitive << ( p_Result_s_reg_305 );
    sensitive << ( result_V_fu_256_p1 );
    sensitive << ( result_V_1_fu_259_p2 );

    SC_METHOD(thread_result_V_fu_256_p1);
    sensitive << ( p_Val2_2_reg_310 );

    SC_METHOD(thread_s_blk_n);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_s_din);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( tmp_8_reg_336 );

    SC_METHOD(thread_s_write);
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm_state27 );

    SC_METHOD(thread_sh_assign_1_cast_cas_fu_206_p1);
    sensitive << ( sh_assign_1_fu_194_p3 );

    SC_METHOD(thread_sh_assign_1_cast_fu_202_p1);
    sensitive << ( sh_assign_1_fu_194_p3 );

    SC_METHOD(thread_sh_assign_1_fu_194_p3);
    sensitive << ( sh_assign_fu_170_p2 );
    sensitive << ( isNeg_fu_176_p3 );
    sensitive << ( tmp_3_cast_fu_190_p1 );

    SC_METHOD(thread_sh_assign_fu_170_p2);
    sensitive << ( tmp_2_cast1_fu_166_p1 );

    SC_METHOD(thread_tmp_15_fu_226_p3);
    sensitive << ( r_V_fu_214_p2 );

    SC_METHOD(thread_tmp_16_fu_272_p1);
    sensitive << ( result_V_3_fu_265_p3 );

    SC_METHOD(thread_tmp_1_cast2_fu_162_p1);
    sensitive << ( tmp_1_fu_152_p4 );

    SC_METHOD(thread_tmp_1_fu_152_p4);
    sensitive << ( loc_V_1_fu_148_p1 );

    SC_METHOD(thread_tmp_2_cast1_fu_166_p1);
    sensitive << ( loc_V_fu_138_p4 );

    SC_METHOD(thread_tmp_2_fu_238_p4);
    sensitive << ( r_V_1_fu_220_p2 );

    SC_METHOD(thread_tmp_3_cast_fu_190_p1);
    sensitive << ( tmp_3_fu_184_p2 );

    SC_METHOD(thread_tmp_3_fu_184_p2);
    sensitive << ( loc_V_fu_138_p4 );

    SC_METHOD(thread_tmp_4_fu_210_p1);
    sensitive << ( sh_assign_1_cast_fu_202_p1 );

    SC_METHOD(thread_tmp_s_fu_234_p1);
    sensitive << ( tmp_15_fu_226_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( e_empty_n );
    sensitive << ( s_full_n );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state27 );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000010";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "racine_do_racine_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, racine_x, "(port)racine_x");
    sc_trace(mVcdFile, racine_x_ap_vld, "(port)racine_x_ap_vld");
    sc_trace(mVcdFile, e_dout, "(port)e_dout");
    sc_trace(mVcdFile, e_empty_n, "(port)e_empty_n");
    sc_trace(mVcdFile, e_read, "(port)e_read");
    sc_trace(mVcdFile, s_din, "(port)s_din");
    sc_trace(mVcdFile, s_full_n, "(port)s_full_n");
    sc_trace(mVcdFile, s_write, "(port)s_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, e_blk_n, "e_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, s_blk_n, "s_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, val_reg_300, "val_reg_300");
    sc_trace(mVcdFile, p_Result_s_reg_305, "p_Result_s_reg_305");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, p_Val2_2_fu_248_p3, "p_Val2_2_fu_248_p3");
    sc_trace(mVcdFile, p_Val2_2_reg_310, "p_Val2_2_reg_310");
    sc_trace(mVcdFile, abs_fu_288_p3, "abs_fu_288_p3");
    sc_trace(mVcdFile, abs_reg_315, "abs_reg_315");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_119_p1, "grp_fu_119_p1");
    sc_trace(mVcdFile, tmp_6_reg_325, "tmp_6_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_122_p2, "grp_fu_122_p2");
    sc_trace(mVcdFile, tmp_7_reg_330, "tmp_7_reg_330");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, grp_fu_114_p2, "grp_fu_114_p2");
    sc_trace(mVcdFile, tmp_8_reg_336, "tmp_8_reg_336");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, grp_fu_119_p0, "grp_fu_119_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, p_Val2_s_fu_127_p1, "p_Val2_s_fu_127_p1");
    sc_trace(mVcdFile, loc_V_1_fu_148_p1, "loc_V_1_fu_148_p1");
    sc_trace(mVcdFile, tmp_1_fu_152_p4, "tmp_1_fu_152_p4");
    sc_trace(mVcdFile, loc_V_fu_138_p4, "loc_V_fu_138_p4");
    sc_trace(mVcdFile, tmp_2_cast1_fu_166_p1, "tmp_2_cast1_fu_166_p1");
    sc_trace(mVcdFile, sh_assign_fu_170_p2, "sh_assign_fu_170_p2");
    sc_trace(mVcdFile, tmp_3_fu_184_p2, "tmp_3_fu_184_p2");
    sc_trace(mVcdFile, isNeg_fu_176_p3, "isNeg_fu_176_p3");
    sc_trace(mVcdFile, tmp_3_cast_fu_190_p1, "tmp_3_cast_fu_190_p1");
    sc_trace(mVcdFile, sh_assign_1_fu_194_p3, "sh_assign_1_fu_194_p3");
    sc_trace(mVcdFile, sh_assign_1_cast_fu_202_p1, "sh_assign_1_cast_fu_202_p1");
    sc_trace(mVcdFile, sh_assign_1_cast_cas_fu_206_p1, "sh_assign_1_cast_cas_fu_206_p1");
    sc_trace(mVcdFile, tmp_1_cast2_fu_162_p1, "tmp_1_cast2_fu_162_p1");
    sc_trace(mVcdFile, tmp_4_fu_210_p1, "tmp_4_fu_210_p1");
    sc_trace(mVcdFile, r_V_fu_214_p2, "r_V_fu_214_p2");
    sc_trace(mVcdFile, tmp_15_fu_226_p3, "tmp_15_fu_226_p3");
    sc_trace(mVcdFile, r_V_1_fu_220_p2, "r_V_1_fu_220_p2");
    sc_trace(mVcdFile, tmp_s_fu_234_p1, "tmp_s_fu_234_p1");
    sc_trace(mVcdFile, tmp_2_fu_238_p4, "tmp_2_fu_238_p4");
    sc_trace(mVcdFile, result_V_fu_256_p1, "result_V_fu_256_p1");
    sc_trace(mVcdFile, result_V_1_fu_259_p2, "result_V_1_fu_259_p2");
    sc_trace(mVcdFile, result_V_3_fu_265_p3, "result_V_3_fu_265_p3");
    sc_trace(mVcdFile, tmp_16_fu_272_p1, "tmp_16_fu_272_p1");
    sc_trace(mVcdFile, abscond_fu_282_p2, "abscond_fu_282_p2");
    sc_trace(mVcdFile, neg_cast_fu_276_p2, "neg_cast_fu_276_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

racine_do_racine::~racine_do_racine() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete carre_fmul_32ns_3bkb_U63;
    delete comparateur_sitofcud_U64;
    delete racine_fsqrt_32nsncg_U65;
}

void racine_do_racine::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void racine_do_racine::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_42AE0000;
}

void racine_do_racine::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv32_0;
}

void racine_do_racine::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state2;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        abs_reg_315 = abs_fu_288_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        p_Result_s_reg_305 = p_Val2_s_fu_127_p1.read().range(31, 31);
        p_Val2_2_reg_310 = p_Val2_2_fu_248_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        tmp_6_reg_325 = grp_fu_119_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        tmp_7_reg_330 = grp_fu_122_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        tmp_8_reg_336 = grp_fu_114_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
        val_reg_300 = e_dout.read();
    }
}

void racine_do_racine::thread_abs_fu_288_p3() {
    abs_fu_288_p3 = (!abscond_fu_282_p2.read()[0].is_01())? sc_lv<31>(): ((abscond_fu_282_p2.read()[0].to_bool())? tmp_16_fu_272_p1.read(): neg_cast_fu_276_p2.read());
}

void racine_do_racine::thread_abscond_fu_282_p2() {
    abscond_fu_282_p2 = (!result_V_3_fu_265_p3.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): (sc_bigint<32>(result_V_3_fu_265_p3.read()) > sc_bigint<32>(ap_const_lv32_0));
}

void racine_do_racine::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void racine_do_racine::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void racine_do_racine::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void racine_do_racine::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void racine_do_racine::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void racine_do_racine::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void racine_do_racine::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void racine_do_racine::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void racine_do_racine::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void racine_do_racine::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void racine_do_racine::thread_e_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        e_blk_n = e_empty_n.read();
    } else {
        e_blk_n = ap_const_logic_1;
    }
}

void racine_do_racine::thread_e_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
        e_read = ap_const_logic_1;
    } else {
        e_read = ap_const_logic_0;
    }
}

void racine_do_racine::thread_grp_fu_119_p0() {
    grp_fu_119_p0 = esl_zext<32,31>(abs_reg_315.read());
}

void racine_do_racine::thread_isNeg_fu_176_p3() {
    isNeg_fu_176_p3 = sh_assign_fu_170_p2.read().range(8, 8);
}

void racine_do_racine::thread_loc_V_1_fu_148_p1() {
    loc_V_1_fu_148_p1 = p_Val2_s_fu_127_p1.read().range(23-1, 0);
}

void racine_do_racine::thread_loc_V_fu_138_p4() {
    loc_V_fu_138_p4 = p_Val2_s_fu_127_p1.read().range(30, 23);
}

void racine_do_racine::thread_neg_cast_fu_276_p2() {
    neg_cast_fu_276_p2 = (!ap_const_lv31_0.is_01() || !tmp_16_fu_272_p1.read().is_01())? sc_lv<31>(): (sc_biguint<31>(ap_const_lv31_0) - sc_biguint<31>(tmp_16_fu_272_p1.read()));
}

void racine_do_racine::thread_p_Val2_2_fu_248_p3() {
    p_Val2_2_fu_248_p3 = (!isNeg_fu_176_p3.read()[0].is_01())? sc_lv<31>(): ((isNeg_fu_176_p3.read()[0].to_bool())? tmp_s_fu_234_p1.read(): tmp_2_fu_238_p4.read());
}

void racine_do_racine::thread_p_Val2_s_fu_127_p1() {
    p_Val2_s_fu_127_p1 = val_reg_300.read();
}

void racine_do_racine::thread_r_V_1_fu_220_p2() {
    r_V_1_fu_220_p2 = (!tmp_4_fu_210_p1.read().is_01())? sc_lv<79>(): tmp_1_cast2_fu_162_p1.read() << (unsigned short)tmp_4_fu_210_p1.read().to_uint();
}

void racine_do_racine::thread_r_V_fu_214_p2() {
    r_V_fu_214_p2 = (!sh_assign_1_cast_cas_fu_206_p1.read().is_01())? sc_lv<25>(): tmp_1_fu_152_p4.read() >> (unsigned short)sh_assign_1_cast_cas_fu_206_p1.read().to_uint();
}

void racine_do_racine::thread_racine_x() {
    racine_x = tmp_7_reg_330.read();
}

void racine_do_racine::thread_racine_x_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        racine_x_ap_vld = ap_const_logic_1;
    } else {
        racine_x_ap_vld = ap_const_logic_0;
    }
}

void racine_do_racine::thread_result_V_1_fu_259_p2() {
    result_V_1_fu_259_p2 = (!ap_const_lv32_0.is_01() || !result_V_fu_256_p1.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(result_V_fu_256_p1.read()));
}

void racine_do_racine::thread_result_V_3_fu_265_p3() {
    result_V_3_fu_265_p3 = (!p_Result_s_reg_305.read()[0].is_01())? sc_lv<32>(): ((p_Result_s_reg_305.read()[0].to_bool())? result_V_1_fu_259_p2.read(): result_V_fu_256_p1.read());
}

void racine_do_racine::thread_result_V_fu_256_p1() {
    result_V_fu_256_p1 = esl_zext<32,31>(p_Val2_2_reg_310.read());
}

void racine_do_racine::thread_s_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read())) {
        s_blk_n = s_full_n.read();
    } else {
        s_blk_n = ap_const_logic_1;
    }
}

void racine_do_racine::thread_s_din() {
    s_din = tmp_8_reg_336.read();
}

void racine_do_racine::thread_s_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && 
         esl_seteq<1,1,1>(s_full_n.read(), ap_const_logic_1))) {
        s_write = ap_const_logic_1;
    } else {
        s_write = ap_const_logic_0;
    }
}

void racine_do_racine::thread_sh_assign_1_cast_cas_fu_206_p1() {
    sh_assign_1_cast_cas_fu_206_p1 = esl_sext<25,9>(sh_assign_1_fu_194_p3.read());
}

void racine_do_racine::thread_sh_assign_1_cast_fu_202_p1() {
    sh_assign_1_cast_fu_202_p1 = esl_sext<32,9>(sh_assign_1_fu_194_p3.read());
}

void racine_do_racine::thread_sh_assign_1_fu_194_p3() {
    sh_assign_1_fu_194_p3 = (!isNeg_fu_176_p3.read()[0].is_01())? sc_lv<9>(): ((isNeg_fu_176_p3.read()[0].to_bool())? tmp_3_cast_fu_190_p1.read(): sh_assign_fu_170_p2.read());
}

void racine_do_racine::thread_sh_assign_fu_170_p2() {
    sh_assign_fu_170_p2 = (!ap_const_lv9_181.is_01() || !tmp_2_cast1_fu_166_p1.read().is_01())? sc_lv<9>(): (sc_bigint<9>(ap_const_lv9_181) + sc_biguint<9>(tmp_2_cast1_fu_166_p1.read()));
}

void racine_do_racine::thread_tmp_15_fu_226_p3() {
    tmp_15_fu_226_p3 = r_V_fu_214_p2.read().range(24, 24);
}

void racine_do_racine::thread_tmp_16_fu_272_p1() {
    tmp_16_fu_272_p1 = result_V_3_fu_265_p3.read().range(31-1, 0);
}

void racine_do_racine::thread_tmp_1_cast2_fu_162_p1() {
    tmp_1_cast2_fu_162_p1 = esl_zext<79,25>(tmp_1_fu_152_p4.read());
}

void racine_do_racine::thread_tmp_1_fu_152_p4() {
    tmp_1_fu_152_p4 = esl_concat<24,1>(esl_concat<1,23>(ap_const_lv1_1, loc_V_1_fu_148_p1.read()), ap_const_lv1_0);
}

void racine_do_racine::thread_tmp_2_cast1_fu_166_p1() {
    tmp_2_cast1_fu_166_p1 = esl_zext<9,8>(loc_V_fu_138_p4.read());
}

void racine_do_racine::thread_tmp_2_fu_238_p4() {
    tmp_2_fu_238_p4 = r_V_1_fu_220_p2.read().range(54, 24);
}

void racine_do_racine::thread_tmp_3_cast_fu_190_p1() {
    tmp_3_cast_fu_190_p1 = esl_sext<9,8>(tmp_3_fu_184_p2.read());
}

void racine_do_racine::thread_tmp_3_fu_184_p2() {
    tmp_3_fu_184_p2 = (!ap_const_lv8_7F.is_01() || !loc_V_fu_138_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_7F) - sc_biguint<8>(loc_V_fu_138_p4.read()));
}

void racine_do_racine::thread_tmp_4_fu_210_p1() {
    tmp_4_fu_210_p1 = esl_zext<79,32>(sh_assign_1_cast_fu_202_p1.read());
}

void racine_do_racine::thread_tmp_s_fu_234_p1() {
    tmp_s_fu_234_p1 = esl_zext<31,1>(tmp_15_fu_226_p3.read());
}

void racine_do_racine::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(e_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) && esl_seteq<1,1,1>(s_full_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state27;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

