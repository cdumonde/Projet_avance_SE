// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.3
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _filtre1_do_filtre_HH_
#define _filtre1_do_filtre_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filtre1_fptrunc_6eOg.h"
#include "filtre1_fpext_32nfYi.h"
#include "filtre1_dadddsub_g8j.h"
#include "filtre1_dmul_64nshbi.h"

namespace ap_rtl {

struct filtre1_do_filtre : public sc_module {
    // Port declarations 30
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_lv<32> > filtre1_y0;
    sc_out< sc_logic > filtre1_y0_ap_vld;
    sc_out< sc_lv<32> > filtre1_x0;
    sc_out< sc_logic > filtre1_x0_ap_vld;
    sc_out< sc_lv<1> > filtre1_mem_x_address0;
    sc_out< sc_logic > filtre1_mem_x_ce0;
    sc_out< sc_logic > filtre1_mem_x_we0;
    sc_out< sc_lv<32> > filtre1_mem_x_d0;
    sc_in< sc_lv<32> > filtre1_mem_x_q0;
    sc_out< sc_lv<1> > filtre1_mem_x_address1;
    sc_out< sc_logic > filtre1_mem_x_ce1;
    sc_out< sc_logic > filtre1_mem_x_we1;
    sc_out< sc_lv<32> > filtre1_mem_x_d1;
    sc_out< sc_lv<1> > filtre1_mem_y_address0;
    sc_out< sc_logic > filtre1_mem_y_ce0;
    sc_out< sc_logic > filtre1_mem_y_we0;
    sc_out< sc_lv<32> > filtre1_mem_y_d0;
    sc_in< sc_lv<32> > filtre1_mem_y_q0;
    sc_out< sc_lv<1> > filtre1_mem_y_address1;
    sc_out< sc_logic > filtre1_mem_y_ce1;
    sc_out< sc_logic > filtre1_mem_y_we1;
    sc_out< sc_lv<32> > filtre1_mem_y_d1;
    sc_in< sc_lv<32> > e_dout;
    sc_in< sc_logic > e_empty_n;
    sc_out< sc_logic > e_read;
    sc_out< sc_lv<32> > s_din;
    sc_in< sc_logic > s_full_n;
    sc_out< sc_logic > s_write;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<64> > ap_var_for_const1;


    // Module declarations
    filtre1_do_filtre(sc_module_name name);
    SC_HAS_PROCESS(filtre1_do_filtre);

    ~filtre1_do_filtre();

    sc_trace_file* mVcdFile;

    filtre1_fptrunc_6eOg<1,1,64,32>* filtre1_fptrunc_6eOg_U36;
    filtre1_fpext_32nfYi<1,1,32,64>* filtre1_fpext_32nfYi_U37;
    filtre1_fpext_32nfYi<1,1,32,64>* filtre1_fpext_32nfYi_U38;
    filtre1_dadddsub_g8j<1,6,64,64,64>* filtre1_dadddsub_g8j_U39;
    filtre1_dmul_64nshbi<1,6,64,64,64>* filtre1_dmul_64nshbi_U40;
    filtre1_dmul_64nshbi<1,6,64,64,64>* filtre1_dmul_64nshbi_U41;
    sc_signal< sc_logic > e_blk_n;
    sc_signal< sc_lv<24> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond_fu_235_p2;
    sc_signal< sc_logic > s_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state24;
    sc_signal< sc_lv<64> > grp_fu_195_p1;
    sc_signal< sc_lv<64> > reg_218;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > grp_fu_207_p2;
    sc_signal< sc_lv<64> > reg_223;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > grp_fu_203_p2;
    sc_signal< sc_lv<64> > reg_229;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_lv<2> > i_fu_241_p2;
    sc_signal< sc_lv<2> > i_reg_256;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<32> > val_reg_261;
    sc_signal< sc_lv<1> > filtre1_mem_y_addr_1_reg_268;
    sc_signal< sc_lv<1> > filtre1_mem_x_addr_1_reg_274;
    sc_signal< sc_lv<64> > tmp_4_fu_198_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_280;
    sc_signal< sc_lv<64> > grp_fu_212_p2;
    sc_signal< sc_lv<64> > tmp_5_reg_285;
    sc_signal< sc_lv<32> > y_fu_191_p1;
    sc_signal< sc_lv<32> > y_reg_290;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<2> > i1_reg_180;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > filtre1_mem_x_addr_gep_fu_111_p3;
    sc_signal< sc_lv<1> > filtre1_mem_y_addr_gep_fu_125_p3;
    sc_signal< sc_lv<1> > filtre1_mem_x_addr_2_gep_fu_139_p3;
    sc_signal< sc_lv<1> > filtre1_mem_y_addr_2_gep_fu_152_p3;
    sc_signal< sc_lv<64> > tmp_s_fu_247_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_195_p0;
    sc_signal< sc_lv<64> > grp_fu_203_p0;
    sc_signal< sc_lv<64> > grp_fu_203_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<64> > grp_fu_207_p1;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<2> > grp_fu_203_opcode;
    sc_signal< sc_lv<24> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<24> ap_ST_fsm_state2;
    static const sc_lv<24> ap_ST_fsm_state3;
    static const sc_lv<24> ap_ST_fsm_state4;
    static const sc_lv<24> ap_ST_fsm_state5;
    static const sc_lv<24> ap_ST_fsm_state6;
    static const sc_lv<24> ap_ST_fsm_state7;
    static const sc_lv<24> ap_ST_fsm_state8;
    static const sc_lv<24> ap_ST_fsm_state9;
    static const sc_lv<24> ap_ST_fsm_state10;
    static const sc_lv<24> ap_ST_fsm_state11;
    static const sc_lv<24> ap_ST_fsm_state12;
    static const sc_lv<24> ap_ST_fsm_state13;
    static const sc_lv<24> ap_ST_fsm_state14;
    static const sc_lv<24> ap_ST_fsm_state15;
    static const sc_lv<24> ap_ST_fsm_state16;
    static const sc_lv<24> ap_ST_fsm_state17;
    static const sc_lv<24> ap_ST_fsm_state18;
    static const sc_lv<24> ap_ST_fsm_state19;
    static const sc_lv<24> ap_ST_fsm_state20;
    static const sc_lv<24> ap_ST_fsm_state21;
    static const sc_lv<24> ap_ST_fsm_state22;
    static const sc_lv<24> ap_ST_fsm_state23;
    static const sc_lv<24> ap_ST_fsm_state24;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<64> ap_const_lv64_3FEF800000000000;
    static const sc_lv<64> ap_const_lv64_3FEF000000000000;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<1> ap_const_lv1_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state24();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state3();
    void thread_e_blk_n();
    void thread_e_read();
    void thread_exitcond_fu_235_p2();
    void thread_filtre1_mem_x_addr_2_gep_fu_139_p3();
    void thread_filtre1_mem_x_addr_gep_fu_111_p3();
    void thread_filtre1_mem_x_address0();
    void thread_filtre1_mem_x_address1();
    void thread_filtre1_mem_x_ce0();
    void thread_filtre1_mem_x_ce1();
    void thread_filtre1_mem_x_d0();
    void thread_filtre1_mem_x_d1();
    void thread_filtre1_mem_x_we0();
    void thread_filtre1_mem_x_we1();
    void thread_filtre1_mem_y_addr_2_gep_fu_152_p3();
    void thread_filtre1_mem_y_addr_gep_fu_125_p3();
    void thread_filtre1_mem_y_address0();
    void thread_filtre1_mem_y_address1();
    void thread_filtre1_mem_y_ce0();
    void thread_filtre1_mem_y_ce1();
    void thread_filtre1_mem_y_d0();
    void thread_filtre1_mem_y_d1();
    void thread_filtre1_mem_y_we0();
    void thread_filtre1_mem_y_we1();
    void thread_filtre1_x0();
    void thread_filtre1_x0_ap_vld();
    void thread_filtre1_y0();
    void thread_filtre1_y0_ap_vld();
    void thread_grp_fu_195_p0();
    void thread_grp_fu_203_opcode();
    void thread_grp_fu_203_p0();
    void thread_grp_fu_203_p1();
    void thread_grp_fu_207_p1();
    void thread_i_fu_241_p2();
    void thread_s_blk_n();
    void thread_s_din();
    void thread_s_write();
    void thread_tmp_s_fu_247_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
