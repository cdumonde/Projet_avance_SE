-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.3
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity carre is
port (
    clk : IN STD_LOGIC;
    reset : IN STD_LOGIC;
    e_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    e_empty_n : IN STD_LOGIC;
    e_read : OUT STD_LOGIC;
    s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    s_full_n : IN STD_LOGIC;
    s_write : OUT STD_LOGIC );
end;


architecture behav of carre is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "carre,hls_ip_2017_3,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.784000,HLS_SYN_LAT=4,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=3,HLS_SYN_FF=214,HLS_SYN_LUT=196}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal grp_carre_do_carre_fu_66_carre_x : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_carre_do_carre_fu_66_carre_x_ap_vld : STD_LOGIC;
    signal grp_carre_do_carre_fu_66_e_read : STD_LOGIC;
    signal grp_carre_do_carre_fu_66_s_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_carre_do_carre_fu_66_s_write : STD_LOGIC;

    component carre_do_carre IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        carre_x : OUT STD_LOGIC_VECTOR (31 downto 0);
        carre_x_ap_vld : OUT STD_LOGIC;
        e_dout : IN STD_LOGIC_VECTOR (31 downto 0);
        e_empty_n : IN STD_LOGIC;
        e_read : OUT STD_LOGIC;
        s_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        s_full_n : IN STD_LOGIC;
        s_write : OUT STD_LOGIC );
    end component;



begin
    grp_carre_do_carre_fu_66 : component carre_do_carre
    port map (
        ap_clk => clk,
        ap_rst => reset,
        carre_x => grp_carre_do_carre_fu_66_carre_x,
        carre_x_ap_vld => grp_carre_do_carre_fu_66_carre_x_ap_vld,
        e_dout => e_dout,
        e_empty_n => e_empty_n,
        e_read => grp_carre_do_carre_fu_66_e_read,
        s_din => grp_carre_do_carre_fu_66_s_din,
        s_full_n => s_full_n,
        s_write => grp_carre_do_carre_fu_66_s_write);




    e_read <= grp_carre_do_carre_fu_66_e_read;
    s_din <= grp_carre_do_carre_fu_66_s_din;
    s_write <= grp_carre_do_carre_fu_66_s_write;
end behav;
